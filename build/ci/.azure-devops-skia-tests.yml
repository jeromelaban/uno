parameters:
  vmImage: ''

jobs:
- job: Skia_Tests_Build
  displayName: 'Skia Samples App Build'
  timeoutInMinutes: 60

  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: Commitsar

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true
    GTK_RUNTIME_URL: https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2020-07-15/gtk3-runtime-3.24.20-2020-07-15-ts-win64.exe

    # This is required to be able to use hard links as much as possible
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
   
  - template: templates/gitversion.yml
  - template: templates/dotnet-install.yml

  - powershell: dotnet msbuild src/SamplesApp/SamplesApp.Skia.Gtk/SamplesApp.Skia.Gtk.csproj /r /m /p:Configuration=Release /detailedsummary /m # /bl:$(build.artifactstagingdirectory)\build.binlog
    displayName: Build GTK Head

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(Build.SourcesDirectory)\src\SamplesApp\SamplesApp.Skia.Gtk\bin\Release\netcoreapp3.1
      ArtifactName: skia-samples-app
      ArtifactType: Container

- job: Skia_Screenshot_Tests
  displayName: 'Skia Samples App Snapshot Tests'
  timeoutInMinutes: 60

  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: Skia_Tests_Build

  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: skia-samples-app
        downloadPath: '$(build.sourcesdirectory)/build'

  - template: templates/dotnet-install.yml
  - template: templates/gtk-install.yml

  - script: |
        cd $(build.sourcesdirectory)/build/skia-samples-app
        SamplesApp.Skia.Gtk.exe --auto-screenshots=$(build.artifactstagingdirectory)/screenshots/skia-gtk-screenshots

    displayName: Run Skia UI Snapshot Tests

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-results
      ArtifactType: Container

- job: Skia_Runtime_Tests_Build
  displayName: 'Skia Samples App Runtime Tests'
  timeoutInMinutes: 60

  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: Skia_Tests_Build

  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: skia-samples-app
        downloadPath: '$(build.sourcesdirectory)/build'

  - template: templates/dotnet-install.yml
  - template: templates/gtk-install.yml

  - script: |
        cd $(build.sourcesdirectory)/build/skia-samples-app
        SamplesApp.Skia.Gtk.exe --runtime-tests=$(build.sourcesdirectory)\build\skia-runtime-tests-results.xml

    displayName: Run Skia UI Tests

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'Skia Runtime Tests'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/skia-runtime-tests-results.xml'
